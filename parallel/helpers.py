'''
Created on Nov 25, 2016

@author: Lucy
'''

def printFlux(flux):
    sortedKeys = sorted(flux)
    for f in sortedKeys:
        print "\t", f, "\t%.3f" % flux[f]
        
def printProducts(products):
    for name in products:
        print name
        fluxes = products[name]["fluxes"]
        for flux in fluxes:
            printFlux(flux)
            print ""
        print "\n-----\n"
        
def genReactionVals(reactions):
    """Generates a dict used to map reaction names to a reaction value.
    
    reactions: A list of COBRA reactions    
    """
    reactionVals = {}
    nextVal = 1
    # Sort the reactions by name so each one always has the same value
    # for the same list of reactions
    orderedReactions = sorted(reactions, key = lambda k:k.id)
    for r in orderedReactions:
        reactionVals[r.id] = nextVal
        nextVal *= 2
    return reactionVals
        
def reactionNamesToVal(reactionIDs, reactionVals):
    """Converts a list of reactionIDs into a single value representing
    the set
    
    reactionIDs: A list of reaction names
    reactionVals: A dict converting reaction names to reaction values,
    as generated by 'genReactionVals'    
    """
    return sum(reactionVals[r] for r in reactionIDs)

def reactionValToNames(reactionValue, reactionVals):
    currentVal = reactionValue
    # generate a list of keys of reactionVals in reverse order
    hiToLo = sorted(reactionVals,
                    key = lambda k:reactionVals[k],
                    reverse = True)
    reactionIDs = []
    for r in hiToLo:
        rVal = reactionVals[r]
        if rVal <= currentVal:
            reactionIDs.append(r)
            currentVal -= rVal
            
    return reactionIDs
    